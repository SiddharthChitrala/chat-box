{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Pusher from 'pusher-js';\nexport let AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.username = 'username';\n    this.message = '';\n  }\n  ngOnInit() {\n    Pusher.logToConsole = true;\n    const pusher = new Pusher('9a5470d17ebacab25ff0', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', data => {\n      // You may choose to add new messages to the existing ones.\n      // this.messages.push(data);\n      // Or, if you want to replace existing messages with new ones:\n      // this.messages = [...this.messages, data];\n    });\n    // Initialize messages$ with the HTTP request.\n    this.messages$ = this.http.get('http://localhost:8000/messages');\n  }\n  submit() {\n    const messageData = {\n      username: this.username,\n      message: this.message\n    };\n    this.http.post('http://localhost:8000/msg', messageData).subscribe(() => {\n      this.message = ''; // Clear the message input on success\n    }, error => {\n      console.error('Error sending message:', error);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","Pusher","AppComponent","constructor","http","username","message","ngOnInit","logToConsole","pusher","cluster","channel","subscribe","bind","data","messages$","get","submit","messageData","post","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\full stack mern,mean,java\\chat box\\frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport Pusher from 'pusher-js';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs'; // Import Observable\n\ninterface MessageData {\n  username: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  username: string = 'username';\n  messages$: Observable<MessageData[]>; // Use Observable<MessageData[]>\n  message: string = '';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    Pusher.logToConsole = true;\n\n    const pusher = new Pusher('9a5470d17ebacab25ff0', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', (data: MessageData) => {\n      // You may choose to add new messages to the existing ones.\n      // this.messages.push(data);\n      // Or, if you want to replace existing messages with new ones:\n      // this.messages = [...this.messages, data];\n    });\n\n    // Initialize messages$ with the HTTP request.\n    this.messages$ = this.http.get<MessageData[]>('http://localhost:8000/messages');\n  }\n\n  submit(): void {\n    const messageData = {\n      username: this.username,\n      message: this.message\n    };\n\n    this.http.post('http://localhost:8000/msg', messageData)\n      .subscribe(\n        () => {\n          this.message = ''; // Clear the message input on success\n        },\n        (error) => {\n          console.error('Error sending message:', error);\n        }\n      );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,OAAOC,MAAM,MAAM,WAAW;AAcvB,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,QAAQ,GAAW,UAAU;IAE7B,KAAAC,OAAO,GAAW,EAAE;EAEoB;EAExCC,QAAQA,CAAA;IACNN,MAAM,CAACO,YAAY,GAAG,IAAI;IAE1B,MAAMC,MAAM,GAAG,IAAIR,MAAM,CAAC,sBAAsB,EAAE;MAChDS,OAAO,EAAE;KACV,CAAC;IAEF,MAAMC,OAAO,GAAGF,MAAM,CAACG,SAAS,CAAC,MAAM,CAAC;IACxCD,OAAO,CAACE,IAAI,CAAC,SAAS,EAAGC,IAAiB,IAAI;MAC5C;MACA;MACA;MACA;IAAA,CACD,CAAC;IAEF;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACX,IAAI,CAACY,GAAG,CAAgB,gCAAgC,CAAC;EACjF;EAEAC,MAAMA,CAAA;IACJ,MAAMC,WAAW,GAAG;MAClBb,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,OAAO,EAAE,IAAI,CAACA;KACf;IAED,IAAI,CAACF,IAAI,CAACe,IAAI,CAAC,2BAA2B,EAAED,WAAW,CAAC,CACrDN,SAAS,CACR,MAAK;MACH,IAAI,CAACN,OAAO,GAAG,EAAE,CAAC,CAAC;IACrB,CAAC,EACAc,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACL;CACD;AA1CYlB,YAAY,GAAAoB,UAAA,EALxBtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWvB,YAAY,CA0CxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}