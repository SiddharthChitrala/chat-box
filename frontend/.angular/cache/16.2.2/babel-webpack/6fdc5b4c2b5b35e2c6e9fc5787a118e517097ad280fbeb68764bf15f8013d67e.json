{"ast":null,"code":"var _class;\nimport Pusher from 'pusher-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(msg_r1.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(msg_r1.message);\n  }\n}\nconsole.log(Mess);\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.username = 'username';\n    this.messages = []; // Provide the type annotation for the messages array\n    this.message = '';\n  }\n  ngOnInit() {\n    Pusher.logToConsole = true;\n    const pusher = new Pusher('9a5470d17ebacab25ff0', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', data => {\n      this.messages.push(data);\n      console.log('Received message:', data); // Add this line for debugging\n    });\n  }\n\n  submit() {\n    const messageData = {\n      username: this.username,\n      message: this.message\n    };\n    this.http.post('http://localhost:8000/msg', messageData).subscribe(() => {\n      this.message = ''; // Clear the message input on success\n    }, error => {\n      console.error('Error sending message:', error);\n      // Handle the error here, e.g., display an error message to the user\n    });\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"username\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"User name\", 3, \"ngModel\", \"ngModelChange\"], [1, \"messages\", \"scrollarea\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Message\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"list-group\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, AppComponent_div_6_Template, 7, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 6);\n      i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_7_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(8, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 8);\n      i0.ɵɵtext(10, \"Send\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.message);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".scrollarea[_ngcontent-%COMP%]{\\n    min-height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIuc2Nyb2xsYXJlYXtcclxuICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Pusher","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","msg_r1","username","message","console","log","Mess","AppComponent","constructor","http","messages","ngOnInit","logToConsole","pusher","cluster","channel","subscribe","bind","data","push","submit","messageData","post","error","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_input_ngModelChange_4_listener","$event","ɵɵtemplate","AppComponent_div_6_Template","AppComponent_Template_form_submit_7_listener","AppComponent_Template_input_ngModelChange_8_listener","ɵɵproperty"],"sources":["D:\\full stack mern,mean,java\\chat box\\frontend\\src\\app\\app.component.ts","D:\\full stack mern,mean,java\\chat box\\frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport Pusher from 'pusher-js';\nimport { HttpClient } from '@angular/common/http';\n\ninterface MessageData {\n  username: string;\n  message: string;\n}\n\nconsole.log(Mess)\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  username: string = 'username';\n  messages: MessageData[] = []; // Provide the type annotation for the messages array\n  message: string = '';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    Pusher.logToConsole = true;\n\n    const pusher = new Pusher('9a5470d17ebacab25ff0', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', (data: MessageData) => { // Provide the type annotation for data\n      this.messages.push(data);\n      console.log('Received message:', data); // Add this line for debugging\n    });\n  }\n\n  submit(): void {\n    const messageData = {\n      username: this.username,\n      message: this.message\n    };\n\n    this.http.post('http://localhost:8000/msg', messageData)\n      .subscribe(\n        () => {\n          this.message = ''; // Clear the message input on success\n        },\n        (error) => {\n          console.error('Error sending message:', error);\n          // Handle the error here, e.g., display an error message to the user\n        }\n      );\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"username\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User name\" [(ngModel)]=\"username\" />\n  </div>\n  <div class=\"messages scrollarea\">\n    <div class=\"list-group\" *ngFor=\"let msg of messages\">\n      <div>\n        <strong>{{ msg.username }}</strong>\n      </div>\n      <div>\n        <p>{{ msg.message }}</p>\n      </div>\n    </div>    \n  </div>\n  <form (submit)=\"submit()\">\n    <input type=\"text\" class=\"form-control\" placeholder=\"Message\" [(ngModel)]=\"message\" />\n    <button type=\"submit\">Send</button>\n  </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}