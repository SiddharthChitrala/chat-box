{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Pusher from 'pusher-js';\nexport let AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.username = 'username';\n    this.messages = [];\n    this.message = '';\n  }\n  ngOnInit() {\n    Pusher.logToConsole = true;\n    const pusher = new Pusher('458de324eb060a5a14e8', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', data => {\n      this.messages.push(data);\n      console.log('Received message:', data); // Add this line for debugging\n    });\n  }\n\n  submit() {\n    this.http.post('http://localhost:8000/msg', {\n      username: this.username,\n      message: this.message\n    }).subscribe(() => this.message = '');\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","Pusher","AppComponent","constructor","http","username","messages","message","ngOnInit","logToConsole","pusher","cluster","channel","subscribe","bind","data","push","console","log","submit","post","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\full stack mern,mean,java\\chat box\\frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport Pusher from 'pusher-js';\nimport { HttpClient } from '@angular/common/http';\n\ninterface MessageData {\n  username: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  username = 'username';\n  messages: MessageData[] = [];\n  message = '';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    Pusher.logToConsole = true;\n\n    const pusher = new Pusher('458de324eb060a5a14e8', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', (data: MessageData) => {\n      this.messages.push(data);\n      console.log('Received message:', data); // Add this line for debugging\n    });\n\n  }\n\n\n  submit(): void {\n    this.http.post('http://localhost:8000/msg', {\n      username: this.username,\n      message: this.message\n    }).subscribe(() => (this.message = ''));\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,OAAOC,MAAM,MAAM,WAAW;AAavB,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,QAAQ,GAAG,UAAU;IACrB,KAAAC,QAAQ,GAAkB,EAAE;IAC5B,KAAAC,OAAO,GAAG,EAAE;EAE4B;EAExCC,QAAQA,CAAA;IACNP,MAAM,CAACQ,YAAY,GAAG,IAAI;IAE1B,MAAMC,MAAM,GAAG,IAAIT,MAAM,CAAC,sBAAsB,EAAE;MAChDU,OAAO,EAAE;KACV,CAAC;IAEF,MAAMC,OAAO,GAAGF,MAAM,CAACG,SAAS,CAAC,MAAM,CAAC;IACxCD,OAAO,CAACE,IAAI,CAAC,SAAS,EAAGC,IAAiB,IAAI;MAC5C,IAAI,CAACT,QAAQ,CAACU,IAAI,CAACD,IAAI,CAAC;MACxBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;EAEJ;;EAGAI,MAAMA,CAAA;IACJ,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,2BAA2B,EAAE;MAC1Cf,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBE,OAAO,EAAE,IAAI,CAACA;KACf,CAAC,CAACM,SAAS,CAAC,MAAO,IAAI,CAACN,OAAO,GAAG,EAAG,CAAC;EACzC;CACD;AA7BYL,YAAY,GAAAmB,UAAA,EALxBrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWtB,YAAY,CA6BxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}